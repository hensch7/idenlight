# Configs
/frontend/config.jsonn

# Logs
/frontend/logs
/frontend/*.log
/frontend/npm-debug.log*
/frontend/yarn-debug.log*
/frontend/yarn-error.log*
/frontend/pnpm-debug.log*
/frontend/lerna-debug.log*
/frontend/node_modules
/frontend/.DS_Store
/frontend/dist
/frontend/dist-ssr
/frontend/coverage
/frontend/*.local

/frontend/cypress/videos/
/frontend/cypress/screenshots/

# Editor directories and files
/frontend/.vscode/*
/frontend/!.vscode/extensions.json
/frontend/.idea
/frontend/*.suo
/frontend/*.ntvs*
/frontend/*.njsproj
/frontend/*.sln
/frontend/*.sw?



## webhook service
# Byte-compiled / optimized / DLL files
/webhook_service/__pycache__/
/webhook_service/*.py[cod]
/webhook_service/*$py.class

# C extensions
/webhook_service/*.so

# Distribution / packaging
/webhook_service/.Python
/webhook_service/build/
/webhook_service/develop-eggs/
/webhook_service/dist/
/webhook_service/downloads/
/webhook_service/eggs/
/webhook_service/.eggs/
/webhook_service/lib/
/webhook_service/lib64/
/webhook_service/parts/
/webhook_service/sdist/
/webhook_service/var/
/webhook_service/wheels/
/webhook_service/share/python-wheels/
/webhook_service/*.egg-info/
/webhook_service/.installed.cfg
/webhook_service/*.egg
/webhook_service/MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
/webhook_service/*.manifest
/webhook_service/*.spec

# Installer logs
/webhook_service/pip-log.txt
/webhook_service/pip-delete-this-directory.txt

# Unit test / coverage reports
/webhook_service/htmlcov/
/webhook_service/.tox/
/webhook_service/.nox/
/webhook_service/.coverage
/webhook_service/.coverage.*
/webhook_service/.cache
/webhook_service/nosetests.xml
/webhook_service/coverage.xml
/webhook_service/*.cover
/webhook_service/*.py,cover
/webhook_service/.hypothesis/
/webhook_service/.pytest_cache/
/webhook_service/cover/

# Translations
/webhook_service/*.mo
/webhook_service/*.pot

# Django stuff:
/webhook_service/*.log
/webhook_service/local_settings.py
/webhook_service/db.sqlite3
/webhook_service/db.sqlite3-journal

# Flask stuff:
/webhook_service/instance/
/webhook_service/.webassets-cache

# Scrapy stuff:
/webhook_service/.scrapy

# Sphinx documentation
/webhook_service/docs/_build/

# PyBuilder
/webhook_service/.pybuilder/
/webhook_service/target/

# Jupyter Notebook
/webhook_service/.ipynb_checkpoints

# IPython
/webhook_service/profile_default/
/webhook_service/ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
/webhook_service/.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
/webhook_service/__pypackages__/

# Celery stuff
/webhook_service/celerybeat-schedule
/webhook_service/celerybeat.pid

# SageMath parsed files
/webhook_service/*.sage.py

# Environments
/webhook_service/.env
/webhook_service/.venv
/webhook_service/env/
/webhook_service/venv/
/webhook_service/ENV/
/webhook_service/env.bak/
/webhook_service/venv.bak/

# Spyder project settings
/webhook_service/.spyderproject
/webhook_service/.spyproject

# Rope project settings
/webhook_service/.ropeproject

# mkdocs documentation
/webhook_service//site

# mypy
/webhook_service/.mypy_cache/
/webhook_service/.dmypy.json
/webhook_service/dmypy.json

# Pyre type checker
/webhook_service/.pyre/

# pytype static type analyzer
/webhook_service/.pytype/

# Cython debug symbols
/webhook_service/cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/


